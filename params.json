{"name":"Dart","tagline":"Extra \"injection\" library for Android.","body":"Dart\r\n============\r\n\r\nExtra \"injection\" library for Android which uses annotation processing to\r\ngenerate code that does direct field assignment of your extras.\r\n\r\nDart is inspired by [ButterKnife][1].\r\n\r\n```java\r\nclass ExampleActivity extends Activity {\r\n  @InjectExtra(\"key_1\") String extra1;\r\n  @InjectExtra(\"key_2\") int extra2;\r\n  @InjectExtra(\"key_3\") User extra3; // User implements Parcelable\r\n\r\n  @Override public void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.simple_activity);\r\n    Dart.inject(this);\r\n    // TODO Use \"injected\" extras...\r\n  }\r\n}\r\n```\r\n\r\nSimply call one of the `inject()` methods, which will delegate to generated code.\r\nYou can inject from an Activity (which uses it's intent extras), Fragment (which use it's arguments)\r\nor directly from a Bundle.\r\n\r\nOptional Injection\r\n------------------\r\nBy default all @InjectExtra fields are required. An exception will be thrown if the target extra cannot be found.\r\n\r\nTo suppress this behavior and create an optional injection, add the @Optional annotation to the field or method.\r\n\r\n```java\r\n@Optional InjectExtra(\"key\") String title;\r\n```\r\n\r\nBonus\r\n-----\r\n\r\nAlso included is a `get()` method that simplifies code to retrieve extras from a Bundle.\r\nIt uses generics to infer return type and automatically perform the cast.\r\n\r\n```java\r\nBundle bundle = getIntent().getExtras(); // getArguments() for a Fragment\r\nUser user = Dart.get(bundle, \"key\"); // User implements Parcelable\r\n```\r\n\r\n\r\nDownload\r\n--------\r\n\r\nDownload [the latest JAR][2] or grab via Maven:\r\n```xml\r\n<dependency>\r\n  <groupId>com.f2prateek.dart</groupId>\r\n  <artifactId>dart</artifactId>\r\n  <version>(insert latest version)</version>\r\n</dependency>\r\n```\r\nor Gradle:\r\n```groovy\r\ncompile 'com.f2prateek.dart:dart:(insert latest version)'\r\n```\r\n\r\n\r\nLicense\r\n-------\r\n\r\n    Copyright 2013 Jake Wharton\r\n    Copyright 2014 Prateek Srivastava (@f2prateek)\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n\r\n [1]: http://jakewharton.github.io/butterknife/\r\n [2]: http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=com.f2prateek.dart&a=dart&v=LATEST","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}